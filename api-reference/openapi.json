{
  "openapi": "3.0.0",
  "info": {
    "title": "Fraud Detection API",
    "version": "v011",
    "description": "API for analyzing survey responses to detect fraudulent activity"
  },
  "paths": {
    "/v011": {
      "post": {
        "summary": "Analyze survey responses to detect fraudulent activity",
        "description": "This endpoint analyzes survey responses to detect fraudulent activity. The API only takes data from one participant, and you must make a separate API call for each participant. After a successful API call is made, the data from that call is stored in our database as a response. This allows us to detect duplicate responses if two calls are made with identical responses but different values for participant_id.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestData"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestData": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "object",
            "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant."
          },
          "question_histories": {
            "type": "object",
            "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker."
          },
          "responses": {
            "type": "object",
            "description": "Records the participant's final responses to each question."
          },
          "survey_id": {
            "type": "string",
            "description": "A unique identifier for the survey."
          },
          "participant_id": {
            "type": "string",
            "description": "A unique identifier for the participant."
          }
        },
        "required": ["questions", "responses", "survey_id", "participant_id"]
      },
      "ResponseData": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error in processing the request."
          },
          "flagged": {
            "type": "boolean",
            "description": "Indicates if any fraudulent activity was detected. If true, we recommend reviewing the participant's responses."
          },
          "num_checks_failed": {
            "type": "integer",
            "description": "Number of checks that failed."
          },
          "checks": {
            "type": "object",
            "description": "Details of specific checks and their outcomes."
          },
          "warning": {
            "type": "string",
            "description": "A message that provides additional context or information about potential issues detected during the request processing. Only returned if there is a warning."
          },
          "problem": {
            "type": "string",
            "description": "A message that explains why error is True. Only returned if there is an error."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}
