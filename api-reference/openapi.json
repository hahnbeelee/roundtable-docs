{
  "openapi": "3.0.0",
  "info": {
    "title": "Fraud Detection API",
    "version": "v013",
    "description": "API for analyzing survey responses to detect fraudulent activity"
  },
  "paths": {
    "/v011": {
      "post": {
        "summary": "Analyze survey responses to detect fraudulent activity",
        "description": "This endpoint analyzes survey responses to detect fraudulent activity for one given participant.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestData"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v011Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v012": {
      "post": {
        "summary": "Analyze survey responses to detect fraudulent activity",
        "description": "This endpoint analyzes survey responses to detect fraudulent activity for one given participant.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDataV012"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v012Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v013": {
      "post": {
        "summary": "Analyze survey responses to detect fraudulent activity",
        "description": "This endpoint analyzes survey responses to detect fraudulent activity for one given participant.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDataV013"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v013Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestData": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "object",
            "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant."
          },
          "question_histories": {
            "type": "object",
            "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker."
          },
          "responses": {
            "type": "object",
            "description": "Records the participant's final responses to each question."
          },
          "survey_id": {
            "type": "string",
            "description": "A unique identifier for the survey."
          },
          "participant_id": {
            "type": "string",
            "description": "A unique identifier for the participant."
          }
        },
        "required": ["questions", "responses", "survey_id", "participant_id"]
      },
      "RequestDataV012": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "object",
            "description": "Contains the survey questions for version v012. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant."
          },
          "question_histories": {
            "type": "object",
            "description": "Records the changes made by the participant while answering the survey for version v012. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker."
          },
          "responses": {
            "type": "object",
            "description": "Records the participant's final responses to each question for version v012."
          },
          "survey_id": {
            "type": "string",
            "description": "A unique identifier for the survey for version v012."
          },
          "participant_id": {
            "type": "string",
            "description": "A unique identifier for the participant for version v012."
          }
        },
        "required": ["questions", "responses", "survey_id", "participant_id"]
      },
      "RequestDataV013": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "object",
            "description": "Contains the survey questions for version v013. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant."
          },
          "question_histories": {
            "type": "object",
            "description": "Records the changes made by the participant while answering the survey for version v013. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker."
          },
          "responses": {
            "type": "object",
            "description": "Records the participant's final responses to each question for version v013."
          },
          "survey_id": {
            "type": "string",
            "description": "A unique identifier for the survey for version v013."
          },
          "participant_id": {
            "type": "string",
            "description": "A unique identifier for the participant for version v013."
          }
        },
        "required": ["questions", "responses", "survey_id", "participant_id"]
      },
      "v011Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error in processing the request.",
            "default": false
          },
          "flagged": {
            "type": "boolean",
            "description": "Indicates if any fraudulent activity was detected for version v011. If true, we recommend reviewing the participant's responses."
          },
          "num_checks_failed": {
            "type": "integer",
            "description": "Number of checks that failed for version v011.",
            "default": 2
          },
          "checks": {
            "type": "object",
            "description": "Details of specific checks and their outcomes for version v011."
          },
          "warning": {
            "type": "string",
            "description": "A message that provides additional context or information about potential issues detected during the request processing for version v011. Only returned if there is a warning."
          }
        }
      },
      "v012Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error in processing the request for version v012.",
            "default": "false"
          },
          "flagged": {
            "type": "boolean",
            "description": "Indicates if any fraudulent activity was detected for version v012. If true, we recommend reviewing the participant's responses for version v012."
          },
          "num_checks_failed": {
            "type": "integer",
            "description": "Number of checks that failed for version v012.",
            "default": "2"
          },
          "checks": {
            "type": "object",
            "description": "Details of specific checks and their outcomes for version v012."
          },
          "warning": {
            "type": "string",
            "description": "A message that provides additional context or information about potential issues detected during the request processing for version v012. Only returned if there is a warning."
          },
          "response_group": {
            "type": "object",
            "description": "Dictionary where key corresponds to check and value corresponds to the cluster of duplicated responses."
          },
          "model": {
            "type": "string",
            "description": "String specifying the model type."
          }
        }
      },
      "v013Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error in processing the request for version v013.",
            "default": "false"
          },
          "flagged": {
            "type": "boolean",
            "description": "Indicates the type of fraudulent activity detected for version v013. The value can be one of several specific strings indicating the reason for flagging."
          },
          "num_checks_failed": {
            "type": "integer",
            "description": "Number of checks that failed for version v013."
          },
          "checks": {
            "type": "string",
            "description": "Details of specific checks and their outcomes for version v013.",
            "enum": [
              "Automated test: Gibberish - The response is not coherent or grammatical",
              "Automated test: Off-topic - The response does not address or relate to the question",
              "Automated test: Low-effort - The response relates to the question, but provides minimal information",
              "Automated test: GPT - Our ML model flags this response as likely generated by a GPT",
              "GPT paste artifacts - Text is formatted in a highly similar way to ChatGPT",
              "Response pasted - The entire response was pasted or entered programmatically",
              "Self-duplicate response - The participant gave a highly similar answer to more than one question",
              "Cross-duplicate response - The participant gave a highly similar answer as another participant"
            ]
          }
          "warning": {
            "type": "string",
            "description": "A message that provides additional context or information about potential issues detected during the request processing for version v013. Only returned if there is a warning."
          },
          "response_group": {
            "type": "object",
            "description": "Dictionary where key corresponds to check and value corresponds to the cluster of duplicated responses."
          },
          "model": {
            "type": "string",
            "description": "String specifying the model type."
          }
        }
      },      
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Error message"
          },
          "problem": {
            "type": "string",
            "description": "A message that explains why error is True for version v012. Only returned if there is an error."
          }
        }
      }
    }
  }
}
